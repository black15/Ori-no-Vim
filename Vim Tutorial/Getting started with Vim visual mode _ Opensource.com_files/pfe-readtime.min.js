import e from"../../pfelement/dist/pfelement.min.js";
/*!
 * PatternFly Elements: PfeReadtime 1.12.3
 * @license
 * Copyright 2021 Red Hat, Inc.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
*/function t(e){switch(e){case"en":case"ko":return 228;case"zh":return 158;case"fr":return 195;case"ja":return 193;case"de":return 179;case"it":return 188;case"pt-br":return 181;case"es":return 218;default:return 228}}class r extends e{static get version(){return"1.12.3"}get html(){return`\n<style>:host{font-size:1rem;font-size:var(--pfe-readtime--FontSize,var(--pf-global--FontSize--md,1rem))}:host([hidden]){display:none} /*# sourceMappingURL=pfe-readtime.min.css.map */</style>\n<span class="pfe-readtime__text">${this.readString}</span>`}static get tag(){return"pfe-readtime"}static get meta(){return{title:"Readtime",description:"This element will collect a word count on a given section and calculate the readtime based on that count."}}get templateUrl(){return"pfe-readtime.html"}get styleUrl(){return"pfe-readtime.scss"}static get PfeType(){return e.PfeTypes.Content}static get properties(){return{wpm:{title:"Words per minute",type:Number,default:e=>t(e._lang),observer:"render"},wordCount:{title:"Number of words in the content",type:Number,default:0,observer:"render"},templateString:{title:"Template for printing the readtime",description:"Translatable string for printing out the readtime in a readable format. Use %t as a stand-in for the calculated value.",attr:"template",type:String,default:e=>e.textContent.trim()||"%t-minute readtime",observer:"render"},_lang:{title:"Language of content",type:String,attr:"lang",enum:["en","ko","zh","fr","ja","de","it","pt-br","es"],default:()=>document.documentElement.lang||"en",observer:"_langChangedHandler"},for:{title:"Element containing content",type:String,observer:"_forChangeHandler"}}}get readtime(){return Math.floor(this.wordCount/this.wpm)||0}get readString(){if(!(this.readtime<=0))return this.removeAttribute("hidden"),this.templateString&&this.templateString.match(/%t/)?this.templateString.replace("%t",this.readtime):`${this.readtime}${this.templateString}`;this.setAttribute("hidden","")}constructor(){super(r,{type:r.PfeType,delayRender:!0}),this._forChangeHandler=this._forChangeHandler.bind(this),this._langChangedHandler=this._langChangedHandler.bind(this)}connectedCallback(){super.connectedCallback(),this.render()}_forChangeHandler(e,t){if(t===e)return;const r=document.querySelector(t)||document.querySelector("#"+t);if(r){if(this.content=r,r.hasAttribute("word-count")){const e=r.getAttribute("word-count");Number(e)>=0&&(this.wordCount=Number(e))}else r.textContent.trim()&&(this.wordCount=r.textContent.split(/\b\w+\b/).length);this.render()}}_langChangedHandler(e,r){r!==e&&(this.wpm=t(r),this.render())}}e.create(r);export default r;
//# sourceMappingURL=pfe-readtime.min.js.map
